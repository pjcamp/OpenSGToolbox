<?xml version="1.0"?>

<FieldContainer
    name="Animation"
    parent="AttachmentContainer"
    library="TBAnimation"
    pointerfieldtypes="both"
    structure="abstract"
    systemcomponent="true"
    parentsystemcomponent="true"
    decoratable="false"
    isNodeCore="false"
    authors="David Kabala (djkabala@gmail.com)                             "
>
\brief Abstract interface for controlling and applying the result of an
#OSG::Animator to some object

To use an animation, first create a concrete instance that
inherits from Animation.  The animation can be started using the start()
method.  Updating the animation can be done using the update() method, or
preferably by attaching an UpdateEvent producer using the
attachUpdateProducer() method.&lt;br&gt;

Classes that inherit from Animation must implement the public
getUnclippedLength() and protected internalUpdate() methods.  internalUpdate() is
responsible for applying the result of an #OSG::Animator to some object.  The
concrete class can define what object to apply to.
    <Field
        name="Cycling"
        type="Int32"
        category="data"
        cardinality="single"
        visibility="external"
        access="public"
        defaultValue="-1"
    >
    </Field>
    <Field
        name="Scale"
        type="Real32"
        category="data"
        cardinality="single"
        visibility="external"
        access="public"
        defaultValue="1.0"
    >
    </Field>
    <Field
        name="Offset"
        type="Real32"
        category="data"
        cardinality="single"
        visibility="external"
        access="public"
        defaultValue="0.0"
    >
    </Field>
    <Field
        name="Span"
        type="Real32"
        category="data"
        cardinality="single"
        visibility="external"
        access="public"
        defaultValue="-1.0"
    >
    </Field>
    <Field
        name="Cycles"
        type="Real32"
        category="data"
        cardinality="single"
        visibility="internal"
        access="public"
        defaultValue="0"
    >
    </Field>
    <ProducedEvent
        name="AnimationStarted"
        detailsType="AnimationEventDetails"
        consumable="true"
    >
    </ProducedEvent>
    <ProducedEvent
        name="AnimationStopped"
        detailsType="AnimationEventDetails"
        consumable="true"
    >
    </ProducedEvent>
    <ProducedEvent
        name="AnimationPaused"
        detailsType="AnimationEventDetails"
        consumable="true"
    >
    </ProducedEvent>
    <ProducedEvent
        name="AnimationUnpaused"
        detailsType="AnimationEventDetails"
        consumable="true"
    >
    </ProducedEvent>
    <ProducedEvent
        name="AnimationEnded"
        detailsType="AnimationEventDetails"
        consumable="true"
    >
    </ProducedEvent>
    <ProducedEvent
        name="AnimationCycled"
        detailsType="AnimationEventDetails"
        consumable="true"
    >
    </ProducedEvent>
</FieldContainer>
