/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FogStage!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &FogStageBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 FogStageBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 FogStageBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the FogStage::_sfBufferFormat field.

inline
GLenum &FogStageBase::editBufferFormat(void)
{
    editSField(BufferFormatFieldMask);

    return _sfBufferFormat.getValue();
}

//! Get the value of the FogStage::_sfBufferFormat field.
inline
const GLenum &FogStageBase::getBufferFormat(void) const
{
    return _sfBufferFormat.getValue();
}

//! Set the value of the FogStage::_sfBufferFormat field.
inline
void FogStageBase::setBufferFormat(const GLenum &value)
{
    editSField(BufferFormatFieldMask);

    _sfBufferFormat.setValue(value);
}
//! Get the value of the FogStage::_sfFogColor field.

inline
Color4f &FogStageBase::editFogColor(void)
{
    editSField(FogColorFieldMask);

    return _sfFogColor.getValue();
}

//! Get the value of the FogStage::_sfFogColor field.
inline
const Color4f &FogStageBase::getFogColor(void) const
{
    return _sfFogColor.getValue();
}

//! Set the value of the FogStage::_sfFogColor field.
inline
void FogStageBase::setFogColor(const Color4f &value)
{
    editSField(FogColorFieldMask);

    _sfFogColor.setValue(value);
}
//! Get the value of the FogStage::_sfFogMode field.

inline
UInt16 &FogStageBase::editFogMode(void)
{
    editSField(FogModeFieldMask);

    return _sfFogMode.getValue();
}

//! Get the value of the FogStage::_sfFogMode field.
inline
      UInt16  FogStageBase::getFogMode(void) const
{
    return _sfFogMode.getValue();
}

//! Set the value of the FogStage::_sfFogMode field.
inline
void FogStageBase::setFogMode(const UInt16 value)
{
    editSField(FogModeFieldMask);

    _sfFogMode.setValue(value);
}
//! Get the value of the FogStage::_sfFogStart field.

inline
Real32 &FogStageBase::editFogStart(void)
{
    editSField(FogStartFieldMask);

    return _sfFogStart.getValue();
}

//! Get the value of the FogStage::_sfFogStart field.
inline
      Real32  FogStageBase::getFogStart(void) const
{
    return _sfFogStart.getValue();
}

//! Set the value of the FogStage::_sfFogStart field.
inline
void FogStageBase::setFogStart(const Real32 value)
{
    editSField(FogStartFieldMask);

    _sfFogStart.setValue(value);
}
//! Get the value of the FogStage::_sfFogEnd field.

inline
Real32 &FogStageBase::editFogEnd(void)
{
    editSField(FogEndFieldMask);

    return _sfFogEnd.getValue();
}

//! Get the value of the FogStage::_sfFogEnd field.
inline
      Real32  FogStageBase::getFogEnd(void) const
{
    return _sfFogEnd.getValue();
}

//! Set the value of the FogStage::_sfFogEnd field.
inline
void FogStageBase::setFogEnd(const Real32 value)
{
    editSField(FogEndFieldMask);

    _sfFogEnd.setValue(value);
}
//! Get the value of the FogStage::_sfFogDensity field.

inline
Real32 &FogStageBase::editFogDensity(void)
{
    editSField(FogDensityFieldMask);

    return _sfFogDensity.getValue();
}

//! Get the value of the FogStage::_sfFogDensity field.
inline
      Real32  FogStageBase::getFogDensity(void) const
{
    return _sfFogDensity.getValue();
}

//! Set the value of the FogStage::_sfFogDensity field.
inline
void FogStageBase::setFogDensity(const Real32 value)
{
    editSField(FogDensityFieldMask);

    _sfFogDensity.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void FogStageBase::execSync (      FogStageBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (BufferFormatFieldMask & whichField))
        _sfBufferFormat.syncWith(pFrom->_sfBufferFormat);

    if(FieldBits::NoField != (FogColorFieldMask & whichField))
        _sfFogColor.syncWith(pFrom->_sfFogColor);

    if(FieldBits::NoField != (FogModeFieldMask & whichField))
        _sfFogMode.syncWith(pFrom->_sfFogMode);

    if(FieldBits::NoField != (FogStartFieldMask & whichField))
        _sfFogStart.syncWith(pFrom->_sfFogStart);

    if(FieldBits::NoField != (FogEndFieldMask & whichField))
        _sfFogEnd.syncWith(pFrom->_sfFogEnd);

    if(FieldBits::NoField != (FogDensityFieldMask & whichField))
        _sfFogDensity.syncWith(pFrom->_sfFogDensity);
}
#endif


inline
const Char8 *FogStageBase::getClassname(void)
{
    return "FogStage";
}
OSG_GEN_CONTAINERPTR(FogStage);

OSG_END_NAMESPACE

