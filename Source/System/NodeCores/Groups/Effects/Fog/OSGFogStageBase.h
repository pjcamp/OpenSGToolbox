/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FogStage
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGFOGSTAGEBASE_H_
#define _OSGFOGSTAGEBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGEffectGroupsDef.h"

//#include "OSGBaseTypes.h"

#include "OSGStage.h" // Parent

#include "OSGBaseFields.h"              // BufferFormat type
#include "OSGSysFields.h"               // FogMode type

#include "OSGFogStageFields.h"

OSG_BEGIN_NAMESPACE

class FogStage;

//! \brief FogStage Base Class.

class OSG_EFFECTGROUPS_DLLMAPPING FogStageBase : public Stage
{
  public:

    typedef Stage Inherited;
    typedef Stage ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(FogStage);
    
    

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        BufferFormatFieldId = Inherited::NextFieldId,
        FogColorFieldId = BufferFormatFieldId + 1,
        FogModeFieldId = FogColorFieldId + 1,
        FogStartFieldId = FogModeFieldId + 1,
        FogEndFieldId = FogStartFieldId + 1,
        FogDensityFieldId = FogEndFieldId + 1,
        NextFieldId = FogDensityFieldId + 1
    };

    static const OSG::BitVector BufferFormatFieldMask =
        (TypeTraits<BitVector>::One << BufferFormatFieldId);
    static const OSG::BitVector FogColorFieldMask =
        (TypeTraits<BitVector>::One << FogColorFieldId);
    static const OSG::BitVector FogModeFieldMask =
        (TypeTraits<BitVector>::One << FogModeFieldId);
    static const OSG::BitVector FogStartFieldMask =
        (TypeTraits<BitVector>::One << FogStartFieldId);
    static const OSG::BitVector FogEndFieldMask =
        (TypeTraits<BitVector>::One << FogEndFieldId);
    static const OSG::BitVector FogDensityFieldMask =
        (TypeTraits<BitVector>::One << FogDensityFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFGLenum          SFBufferFormatType;
    typedef SFColor4f         SFFogColorType;
    typedef SFUInt16          SFFogModeType;
    typedef SFReal32          SFFogStartType;
    typedef SFReal32          SFFogEndType;
    typedef SFReal32          SFFogDensityType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFGLenum            *editSFBufferFormat   (void);
            const SFGLenum            *getSFBufferFormat    (void) const;

                  SFColor4f           *editSFFogColor       (void);
            const SFColor4f           *getSFFogColor        (void) const;

                  SFUInt16            *editSFFogMode        (void);
            const SFUInt16            *getSFFogMode         (void) const;

                  SFReal32            *editSFFogStart       (void);
            const SFReal32            *getSFFogStart        (void) const;

                  SFReal32            *editSFFogEnd         (void);
            const SFReal32            *getSFFogEnd          (void) const;

                  SFReal32            *editSFFogDensity     (void);
            const SFReal32            *getSFFogDensity      (void) const;


                  GLenum              &editBufferFormat   (void);
            const GLenum              &getBufferFormat    (void) const;

                  Color4f             &editFogColor       (void);
            const Color4f             &getFogColor        (void) const;

                  UInt16              &editFogMode        (void);
                  UInt16               getFogMode         (void) const;

                  Real32              &editFogStart       (void);
                  Real32               getFogStart        (void) const;

                  Real32              &editFogEnd         (void);
                  Real32               getFogEnd          (void) const;

                  Real32              &editFogDensity     (void);
                  Real32               getFogDensity      (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setBufferFormat   (const GLenum &value);
            void setFogColor       (const Color4f &value);
            void setFogMode        (const UInt16 value);
            void setFogStart       (const Real32 value);
            void setFogEnd         (const Real32 value);
            void setFogDensity     (const Real32 value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  FogStageTransitPtr  create          (void);
    static  FogStage           *createEmpty     (void);

    static  FogStageTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  FogStage            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  FogStageTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFGLenum          _sfBufferFormat;
    SFColor4f         _sfFogColor;
    SFUInt16          _sfFogMode;
    SFReal32          _sfFogStart;
    SFReal32          _sfFogEnd;
    SFReal32          _sfFogDensity;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    FogStageBase(void);
    FogStageBase(const FogStageBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~FogStageBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleBufferFormat    (void) const;
    EditFieldHandlePtr editHandleBufferFormat   (void);
    GetFieldHandlePtr  getHandleFogColor        (void) const;
    EditFieldHandlePtr editHandleFogColor       (void);
    GetFieldHandlePtr  getHandleFogMode         (void) const;
    EditFieldHandlePtr editHandleFogMode        (void);
    GetFieldHandlePtr  getHandleFogStart        (void) const;
    EditFieldHandlePtr editHandleFogStart       (void);
    GetFieldHandlePtr  getHandleFogEnd          (void) const;
    EditFieldHandlePtr editHandleFogEnd         (void);
    GetFieldHandlePtr  getHandleFogDensity      (void) const;
    EditFieldHandlePtr editHandleFogDensity     (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      FogStageBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const FogStageBase &source);
};

typedef FogStageBase *FogStageBaseP;

typedef CoredNodeRefPtr  <FogStage> FogStageNodeRefPtr;
typedef CoredNodeMTRefPtr<FogStage> FogStageNodeMTRefPtr;

OSG_END_NAMESPACE

#endif /* _OSGFOGSTAGEBASE_H_ */
