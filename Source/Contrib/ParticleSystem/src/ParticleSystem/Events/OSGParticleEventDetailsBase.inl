/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleEventDetails!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ParticleEventDetailsBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 ParticleEventDetailsBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 ParticleEventDetailsBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the ParticleEventDetails::_sfParticleIndex field.

inline
Int32 &ParticleEventDetailsBase::editParticleIndex(void)
{
    editSField(ParticleIndexFieldMask);

    return _sfParticleIndex.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleIndex field.
inline
      Int32  ParticleEventDetailsBase::getParticleIndex(void) const
{
    return _sfParticleIndex.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleIndex field.
inline
void ParticleEventDetailsBase::setParticleIndex(const Int32 value)
{
    editSField(ParticleIndexFieldMask);

    _sfParticleIndex.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleID field.

inline
UInt32 &ParticleEventDetailsBase::editParticleID(void)
{
    editSField(ParticleIDFieldMask);

    return _sfParticleID.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleID field.
inline
      UInt32  ParticleEventDetailsBase::getParticleID(void) const
{
    return _sfParticleID.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleID field.
inline
void ParticleEventDetailsBase::setParticleID(const UInt32 value)
{
    editSField(ParticleIDFieldMask);

    _sfParticleID.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticlePosition field.

inline
Pnt3f &ParticleEventDetailsBase::editParticlePosition(void)
{
    editSField(ParticlePositionFieldMask);

    return _sfParticlePosition.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticlePosition field.
inline
const Pnt3f &ParticleEventDetailsBase::getParticlePosition(void) const
{
    return _sfParticlePosition.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticlePosition field.
inline
void ParticleEventDetailsBase::setParticlePosition(const Pnt3f &value)
{
    editSField(ParticlePositionFieldMask);

    _sfParticlePosition.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleSecPosition field.

inline
Pnt3f &ParticleEventDetailsBase::editParticleSecPosition(void)
{
    editSField(ParticleSecPositionFieldMask);

    return _sfParticleSecPosition.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleSecPosition field.
inline
const Pnt3f &ParticleEventDetailsBase::getParticleSecPosition(void) const
{
    return _sfParticleSecPosition.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleSecPosition field.
inline
void ParticleEventDetailsBase::setParticleSecPosition(const Pnt3f &value)
{
    editSField(ParticleSecPositionFieldMask);

    _sfParticleSecPosition.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleNormal field.

inline
Vec3f &ParticleEventDetailsBase::editParticleNormal(void)
{
    editSField(ParticleNormalFieldMask);

    return _sfParticleNormal.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleNormal field.
inline
const Vec3f &ParticleEventDetailsBase::getParticleNormal(void) const
{
    return _sfParticleNormal.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleNormal field.
inline
void ParticleEventDetailsBase::setParticleNormal(const Vec3f &value)
{
    editSField(ParticleNormalFieldMask);

    _sfParticleNormal.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleColor field.

inline
Color4f &ParticleEventDetailsBase::editParticleColor(void)
{
    editSField(ParticleColorFieldMask);

    return _sfParticleColor.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleColor field.
inline
const Color4f &ParticleEventDetailsBase::getParticleColor(void) const
{
    return _sfParticleColor.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleColor field.
inline
void ParticleEventDetailsBase::setParticleColor(const Color4f &value)
{
    editSField(ParticleColorFieldMask);

    _sfParticleColor.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleSize field.

inline
Vec3f &ParticleEventDetailsBase::editParticleSize(void)
{
    editSField(ParticleSizeFieldMask);

    return _sfParticleSize.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleSize field.
inline
const Vec3f &ParticleEventDetailsBase::getParticleSize(void) const
{
    return _sfParticleSize.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleSize field.
inline
void ParticleEventDetailsBase::setParticleSize(const Vec3f &value)
{
    editSField(ParticleSizeFieldMask);

    _sfParticleSize.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleLifespan field.

inline
Real32 &ParticleEventDetailsBase::editParticleLifespan(void)
{
    editSField(ParticleLifespanFieldMask);

    return _sfParticleLifespan.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleLifespan field.
inline
      Real32  ParticleEventDetailsBase::getParticleLifespan(void) const
{
    return _sfParticleLifespan.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleLifespan field.
inline
void ParticleEventDetailsBase::setParticleLifespan(const Real32 value)
{
    editSField(ParticleLifespanFieldMask);

    _sfParticleLifespan.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleAge field.

inline
Real32 &ParticleEventDetailsBase::editParticleAge(void)
{
    editSField(ParticleAgeFieldMask);

    return _sfParticleAge.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleAge field.
inline
      Real32  ParticleEventDetailsBase::getParticleAge(void) const
{
    return _sfParticleAge.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleAge field.
inline
void ParticleEventDetailsBase::setParticleAge(const Real32 value)
{
    editSField(ParticleAgeFieldMask);

    _sfParticleAge.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleVelocity field.

inline
Vec3f &ParticleEventDetailsBase::editParticleVelocity(void)
{
    editSField(ParticleVelocityFieldMask);

    return _sfParticleVelocity.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleVelocity field.
inline
const Vec3f &ParticleEventDetailsBase::getParticleVelocity(void) const
{
    return _sfParticleVelocity.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleVelocity field.
inline
void ParticleEventDetailsBase::setParticleVelocity(const Vec3f &value)
{
    editSField(ParticleVelocityFieldMask);

    _sfParticleVelocity.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleSecVelocity field.

inline
Vec3f &ParticleEventDetailsBase::editParticleSecVelocity(void)
{
    editSField(ParticleSecVelocityFieldMask);

    return _sfParticleSecVelocity.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleSecVelocity field.
inline
const Vec3f &ParticleEventDetailsBase::getParticleSecVelocity(void) const
{
    return _sfParticleSecVelocity.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleSecVelocity field.
inline
void ParticleEventDetailsBase::setParticleSecVelocity(const Vec3f &value)
{
    editSField(ParticleSecVelocityFieldMask);

    _sfParticleSecVelocity.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleAcceleration field.

inline
Vec3f &ParticleEventDetailsBase::editParticleAcceleration(void)
{
    editSField(ParticleAccelerationFieldMask);

    return _sfParticleAcceleration.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleAcceleration field.
inline
const Vec3f &ParticleEventDetailsBase::getParticleAcceleration(void) const
{
    return _sfParticleAcceleration.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleAcceleration field.
inline
void ParticleEventDetailsBase::setParticleAcceleration(const Vec3f &value)
{
    editSField(ParticleAccelerationFieldMask);

    _sfParticleAcceleration.setValue(value);
}
//! Get the value of the ParticleEventDetails::_sfParticleAttributes field.

inline
StringToUInt32Map &ParticleEventDetailsBase::editParticleAttributes(void)
{
    editSField(ParticleAttributesFieldMask);

    return _sfParticleAttributes.getValue();
}

//! Get the value of the ParticleEventDetails::_sfParticleAttributes field.
inline
const StringToUInt32Map &ParticleEventDetailsBase::getParticleAttributes(void) const
{
    return _sfParticleAttributes.getValue();
}

//! Set the value of the ParticleEventDetails::_sfParticleAttributes field.
inline
void ParticleEventDetailsBase::setParticleAttributes(const StringToUInt32Map &value)
{
    editSField(ParticleAttributesFieldMask);

    _sfParticleAttributes.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void ParticleEventDetailsBase::execSync (      ParticleEventDetailsBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (ParticleIndexFieldMask & whichField))
        _sfParticleIndex.syncWith(pFrom->_sfParticleIndex);

    if(FieldBits::NoField != (ParticleIDFieldMask & whichField))
        _sfParticleID.syncWith(pFrom->_sfParticleID);

    if(FieldBits::NoField != (ParticlePositionFieldMask & whichField))
        _sfParticlePosition.syncWith(pFrom->_sfParticlePosition);

    if(FieldBits::NoField != (ParticleSecPositionFieldMask & whichField))
        _sfParticleSecPosition.syncWith(pFrom->_sfParticleSecPosition);

    if(FieldBits::NoField != (ParticleNormalFieldMask & whichField))
        _sfParticleNormal.syncWith(pFrom->_sfParticleNormal);

    if(FieldBits::NoField != (ParticleColorFieldMask & whichField))
        _sfParticleColor.syncWith(pFrom->_sfParticleColor);

    if(FieldBits::NoField != (ParticleSizeFieldMask & whichField))
        _sfParticleSize.syncWith(pFrom->_sfParticleSize);

    if(FieldBits::NoField != (ParticleLifespanFieldMask & whichField))
        _sfParticleLifespan.syncWith(pFrom->_sfParticleLifespan);

    if(FieldBits::NoField != (ParticleAgeFieldMask & whichField))
        _sfParticleAge.syncWith(pFrom->_sfParticleAge);

    if(FieldBits::NoField != (ParticleVelocityFieldMask & whichField))
        _sfParticleVelocity.syncWith(pFrom->_sfParticleVelocity);

    if(FieldBits::NoField != (ParticleSecVelocityFieldMask & whichField))
        _sfParticleSecVelocity.syncWith(pFrom->_sfParticleSecVelocity);

    if(FieldBits::NoField != (ParticleAccelerationFieldMask & whichField))
        _sfParticleAcceleration.syncWith(pFrom->_sfParticleAcceleration);

    if(FieldBits::NoField != (ParticleAttributesFieldMask & whichField))
        _sfParticleAttributes.syncWith(pFrom->_sfParticleAttributes);
}
#endif


inline
const Char8 *ParticleEventDetailsBase::getClassname(void)
{
    return "ParticleEventDetails";
}
OSG_GEN_CONTAINERPTR(ParticleEventDetails);

OSG_END_NAMESPACE

