/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), Daniel Guilliams           *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleTrailGenerator
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPARTICLETRAILGENERATORBASE_H_
#define _OSGPARTICLETRAILGENERATORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribParticleTrailDef.h"

//#include "OSGBaseTypes.h"

#include "OSGNode.h" // Parent

#include "OSGParticleSystemFields.h"    // SystemToTrail type
#include "OSGSysFields.h"               // TrailLength type

#include "OSGParticleTrailGeneratorFields.h"

OSG_BEGIN_NAMESPACE

class ParticleTrailGenerator;

//! \brief ParticleTrailGenerator Base Class.

class OSG_CONTRIBPARTICLETRAIL_DLLMAPPING ParticleTrailGeneratorBase : public Node
{
  public:

    typedef Node Inherited;
    typedef Node ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(ParticleTrailGenerator);
    
    

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        SystemToTrailFieldId = Inherited::NextFieldId,
        TrailLengthFieldId = SystemToTrailFieldId + 1,
        TrailLengthMethodFieldId = TrailLengthFieldId + 1,
        TrailResolutionFieldId = TrailLengthMethodFieldId + 1,
        TrailResolutionMethodFieldId = TrailResolutionFieldId + 1,
        NextFieldId = TrailResolutionMethodFieldId + 1
    };

    static const OSG::BitVector SystemToTrailFieldMask =
        (TypeTraits<BitVector>::One << SystemToTrailFieldId);
    static const OSG::BitVector TrailLengthFieldMask =
        (TypeTraits<BitVector>::One << TrailLengthFieldId);
    static const OSG::BitVector TrailLengthMethodFieldMask =
        (TypeTraits<BitVector>::One << TrailLengthMethodFieldId);
    static const OSG::BitVector TrailResolutionFieldMask =
        (TypeTraits<BitVector>::One << TrailResolutionFieldId);
    static const OSG::BitVector TrailResolutionMethodFieldMask =
        (TypeTraits<BitVector>::One << TrailResolutionMethodFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFUnrecParticleSystemPtr SFSystemToTrailType;
    typedef SFReal32          SFTrailLengthType;
    typedef SFUInt32          SFTrailLengthMethodType;
    typedef SFReal64          SFTrailResolutionType;
    typedef SFUInt32          SFTrailResolutionMethodType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const SFUnrecParticleSystemPtr *getSFSystemToTrail  (void) const;
                  SFUnrecParticleSystemPtr *editSFSystemToTrail  (void);

                  SFReal32            *editSFTrailLength    (void);
            const SFReal32            *getSFTrailLength     (void) const;

                  SFUInt32            *editSFTrailLengthMethod(void);
            const SFUInt32            *getSFTrailLengthMethod (void) const;

                  SFReal64            *editSFTrailResolution(void);
            const SFReal64            *getSFTrailResolution (void) const;

                  SFUInt32            *editSFTrailResolutionMethod(void);
            const SFUInt32            *getSFTrailResolutionMethod (void) const;


                  ParticleSystem * getSystemToTrail  (void) const;

                  Real32              &editTrailLength    (void);
                  Real32               getTrailLength     (void) const;

                  UInt32              &editTrailLengthMethod(void);
                  UInt32               getTrailLengthMethod (void) const;

                  Real64              &editTrailResolution(void);
                  Real64               getTrailResolution (void) const;

                  UInt32              &editTrailResolutionMethod(void);
                  UInt32               getTrailResolutionMethod (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setSystemToTrail  (ParticleSystem * const value);
            void setTrailLength    (const Real32 value);
            void setTrailLengthMethod(const UInt32 value);
            void setTrailResolution(const Real64 value);
            void setTrailResolutionMethod(const UInt32 value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUnrecParticleSystemPtr _sfSystemToTrail;
    SFReal32          _sfTrailLength;
    SFUInt32          _sfTrailLengthMethod;
    SFReal64          _sfTrailResolution;
    SFUInt32          _sfTrailResolutionMethod;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    ParticleTrailGeneratorBase(void);
    ParticleTrailGeneratorBase(const ParticleTrailGeneratorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~ParticleTrailGeneratorBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const ParticleTrailGenerator *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleSystemToTrail   (void) const;
    EditFieldHandlePtr editHandleSystemToTrail  (void);
    GetFieldHandlePtr  getHandleTrailLength     (void) const;
    EditFieldHandlePtr editHandleTrailLength    (void);
    GetFieldHandlePtr  getHandleTrailLengthMethod (void) const;
    EditFieldHandlePtr editHandleTrailLengthMethod(void);
    GetFieldHandlePtr  getHandleTrailResolution (void) const;
    EditFieldHandlePtr editHandleTrailResolution(void);
    GetFieldHandlePtr  getHandleTrailResolutionMethod (void) const;
    EditFieldHandlePtr editHandleTrailResolutionMethod(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      ParticleTrailGeneratorBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const ParticleTrailGeneratorBase &source);
};

typedef ParticleTrailGeneratorBase *ParticleTrailGeneratorBaseP;

OSG_END_NAMESPACE

#endif /* _OSGPARTICLETRAILGENERATORBASE_H_ */
