/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Menu!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &MenuBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 MenuBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 MenuBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the Menu::_sfInternalPopupMenu field.
inline
PopupMenu * MenuBase::getInternalPopupMenu(void) const
{
    return _sfInternalPopupMenu.getValue();
}

//! Set the value of the Menu::_sfInternalPopupMenu field.
inline
void MenuBase::setInternalPopupMenu(PopupMenu * const value)
{
    editSField(InternalPopupMenuFieldMask);

    _sfInternalPopupMenu.setValue(value);
}
//! Get the value of the Menu::_sfSubMenuDelay field.

inline
Real32 &MenuBase::editSubMenuDelay(void)
{
    editSField(SubMenuDelayFieldMask);

    return _sfSubMenuDelay.getValue();
}

//! Get the value of the Menu::_sfSubMenuDelay field.
inline
      Real32  MenuBase::getSubMenuDelay(void) const
{
    return _sfSubMenuDelay.getValue();
}

//! Set the value of the Menu::_sfSubMenuDelay field.
inline
void MenuBase::setSubMenuDelay(const Real32 value)
{
    editSField(SubMenuDelayFieldMask);

    _sfSubMenuDelay.setValue(value);
}
//! Get the value of the Menu::_sfTopLevelMenu field.

inline
bool &MenuBase::editTopLevelMenu(void)
{
    editSField(TopLevelMenuFieldMask);

    return _sfTopLevelMenu.getValue();
}

//! Get the value of the Menu::_sfTopLevelMenu field.
inline
      bool  MenuBase::getTopLevelMenu(void) const
{
    return _sfTopLevelMenu.getValue();
}

//! Set the value of the Menu::_sfTopLevelMenu field.
inline
void MenuBase::setTopLevelMenu(const bool value)
{
    editSField(TopLevelMenuFieldMask);

    _sfTopLevelMenu.setValue(value);
}

//! Get the value of the Menu::_sfExpandDrawObject field.
inline
UIDrawObjectCanvas * MenuBase::getExpandDrawObject(void) const
{
    return _sfExpandDrawObject.getValue();
}

//! Set the value of the Menu::_sfExpandDrawObject field.
inline
void MenuBase::setExpandDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(ExpandDrawObjectFieldMask);

    _sfExpandDrawObject.setValue(value);
}

//! Get the value of the \a index element the Menu::_mfMenuItems field.
inline
MenuItem * MenuBase::getMenuItems(const UInt32 index) const
{
    return _mfMenuItems[index];
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void MenuBase::execSync (      MenuBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (InternalPopupMenuFieldMask & whichField))
        _sfInternalPopupMenu.syncWith(pFrom->_sfInternalPopupMenu);

    if(FieldBits::NoField != (SubMenuDelayFieldMask & whichField))
        _sfSubMenuDelay.syncWith(pFrom->_sfSubMenuDelay);

    if(FieldBits::NoField != (TopLevelMenuFieldMask & whichField))
        _sfTopLevelMenu.syncWith(pFrom->_sfTopLevelMenu);

    if(FieldBits::NoField != (ExpandDrawObjectFieldMask & whichField))
        _sfExpandDrawObject.syncWith(pFrom->_sfExpandDrawObject);

    if(FieldBits::NoField != (MenuItemsFieldMask & whichField))
        _mfMenuItems.syncWith(pFrom->_mfMenuItems,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);
}
#endif


inline
const Char8 *MenuBase::getClassname(void)
{
    return "Menu";
}
OSG_GEN_CONTAINERPTR(Menu);

OSG_END_NAMESPACE

