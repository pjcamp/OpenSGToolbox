/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *          Achyuthan Vasanth (vasanth.achyuthan@gmail.com)                  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TextAreaGutter!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &TextAreaGutterBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 TextAreaGutterBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 TextAreaGutterBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the TextAreaGutter::_sfTrackedArea field.
inline
TextDomArea * TextAreaGutterBase::getTrackedArea(void) const
{
    return _sfTrackedArea.getValue();
}

//! Set the value of the TextAreaGutter::_sfTrackedArea field.
inline
void TextAreaGutterBase::setTrackedArea(TextDomArea * const value)
{
    editSField(TrackedAreaFieldMask);

    _sfTrackedArea.setValue(value);
}
//! Get the value of the TextAreaGutter::_sfAlignment field.

inline
Vec2f &TextAreaGutterBase::editAlignment(void)
{
    editSField(AlignmentFieldMask);

    return _sfAlignment.getValue();
}

//! Get the value of the TextAreaGutter::_sfAlignment field.
inline
const Vec2f &TextAreaGutterBase::getAlignment(void) const
{
    return _sfAlignment.getValue();
}

//! Set the value of the TextAreaGutter::_sfAlignment field.
inline
void TextAreaGutterBase::setAlignment(const Vec2f &value)
{
    editSField(AlignmentFieldMask);

    _sfAlignment.setValue(value);
}
//! Get the value of the TextAreaGutter::_sfTextColor field.

inline
Color4f &TextAreaGutterBase::editTextColor(void)
{
    editSField(TextColorFieldMask);

    return _sfTextColor.getValue();
}

//! Get the value of the TextAreaGutter::_sfTextColor field.
inline
const Color4f &TextAreaGutterBase::getTextColor(void) const
{
    return _sfTextColor.getValue();
}

//! Set the value of the TextAreaGutter::_sfTextColor field.
inline
void TextAreaGutterBase::setTextColor(const Color4f &value)
{
    editSField(TextColorFieldMask);

    _sfTextColor.setValue(value);
}

//! Get the value of the TextAreaGutter::_sfFont field.
inline
UIFont * TextAreaGutterBase::getFont(void) const
{
    return _sfFont.getValue();
}

//! Set the value of the TextAreaGutter::_sfFont field.
inline
void TextAreaGutterBase::setFont(UIFont * const value)
{
    editSField(FontFieldMask);

    _sfFont.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void TextAreaGutterBase::execSync (      TextAreaGutterBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (TrackedAreaFieldMask & whichField))
        _sfTrackedArea.syncWith(pFrom->_sfTrackedArea);

    if(FieldBits::NoField != (AlignmentFieldMask & whichField))
        _sfAlignment.syncWith(pFrom->_sfAlignment);

    if(FieldBits::NoField != (TextColorFieldMask & whichField))
        _sfTextColor.syncWith(pFrom->_sfTextColor);

    if(FieldBits::NoField != (FontFieldMask & whichField))
        _sfFont.syncWith(pFrom->_sfFont);
}
#endif


inline
const Char8 *TextAreaGutterBase::getClassname(void)
{
    return "TextAreaGutter";
}
OSG_GEN_CONTAINERPTR(TextAreaGutter);

OSG_END_NAMESPACE

